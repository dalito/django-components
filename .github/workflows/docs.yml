---
name: Docs - build & deploy
on:
  push:
    tags:
      - '*'
    branches: 
      - master
  workflow_dispatch:
    inputs:
      docs_tag:
        description: "The tag to publish docs for. Uses the default branch if not specified."
        default: ""
        type: string
  release:
    types: [published]

jobs:
  docs:
    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      contents: write  # to let mkdocs write the new docs
      pages: write     # to deploy to Pages
      id-token: write  # to verify the deployment originates from an appropriate source
    runs-on: ubuntu-latest
    # Only run in original repo (not in forks)
    # XXX if: github.repository == 'EmilStenstrom/django-components'
    steps:
      - name: Print input
        run: 
          echo "Input was ${{ github.event.inputs.docs_tag }}"
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          # Use tag given in input for manually trigger workflows.
          ref: ${{ github.event.inputs.docs_tag }}
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install Hatch
        run: |
            python -m pip install --upgrade pip wheel
            python -m pip install -q hatch pre-commit
            hatch --version

      - name: Create Virtual Environment
        run: hatch env create docs

      - name: "Build and check docs in pull requests"
        # XXX Enable strict mode once docs are clean
        run: |
          hatch run docs:build
          # hatch run docs:build --strict

      - name: Configure git
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com

      - name: Print variables possibly needed
        # https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/accessing-contextual-information-about-workflow-runs#github-context
        run: |
          # env vars used in this action
          echo 'event_name' ${{ github.event_name }}
          echo 'ref_name' ${{ github.ref_name }}
          echo 'ref_type' ${{ github.ref_type }}
          echo 'github.event.action' ${{ github.event.action }}
          echo 'github.repository' ${{ github.repository }}

      - name: Deploy docs (dev)
        if: github.event_name == 'push' && github.ref_type != 'tag'
        run: |
          export SHORT_SHA=$(echo "${GITHUB_SHA}" | cut -c1-7)
          hatch run docs:mike deploy dev --update-aliases --title "dev (${SHORT_SHA})" --push

      - name: Deploy docs (new tag)
        if: github.ref_type == 'tag' && github.event_name == 'push'
        run: |
          hatch run docs:mike deploy ${{ github.ref_name }} latest --push --update-aliases
          hatch run docs:mike set-default latest --push

      - name: Deploy docs (new release published)
        # github.ref contains the release name created for a Release; github.ref_name should be the short tag
        if: github.event_name == 'release'
        run: |
          hatch run docs:mike deploy ${{ github.ref_name }} latest --push --update-aliases
          hatch run docs:mike set-default latest --push
